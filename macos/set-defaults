#!/bin/sh
#
# This script will set preferences on MacOS

source $DOTHOME/lib/common

set_macos_preferences() {
    if [ "$(uname -s)" != "Darwin" ]
    then
        return 0
    fi
    user "Set MacOS preferences? (y/n)"
    read -s -n 1 response
    if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then

        success "Set a blazingly fast keyboard repeat rate"
        defaults write NSGlobalDomain KeyRepeat -int 2

        success "Set a shorter delay until key repeat"
        defaults write NSGlobalDomain InitialKeyRepeat -int 15

        success "Enabled the Safari debug menu"
        defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

        success "Enabled the Develop menu and the Web Inspector in Safari"
        defaults write com.apple.Safari IncludeDevelopMenu -bool true
        defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
        defaults write com.apple.Safari "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled" -bool true

        success "Set the the path bar in Finder to show"
        defaults write com.apple.finder ShowPathbar -bool true

        success "Set the status bar in Finder to show"
        defaults write com.apple.finder ShowStatusBar -bool true

        success "Set the indicator lights for open applications in the Dock to show"
        defaults write com.apple.dock show-process-indicators -bool true

        success "Set the mouse scroll direction"
        defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

        success "Set all processes in Activity Monitor to show by default"
        defaults write com.apple.ActivityMonitor ShowCategory -int 100

        success "Set the save panel to expand by default"
        defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
        defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
        defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

        success "Added a context menu item for showing the Web Inspector in web views"
        defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

        success "Disabled the annoying backswipe in Chrome"
        defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
        defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false

        success "Using the system-native print preview dialog in Chrome"
        defaults write com.google.Chrome DisablePrintPreview -bool true
        defaults write com.google.Chrome.canary DisablePrintPreview -bool true

        #success "Revealing IP address, hostname, OS version, etc. when clicking the clock in the login window"
        #sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostsuccess HostName

        success "Set software updates to check daily instead of just once per week"
        defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

        success "Set the printer app to quit automatically once the print jobs complete"
        defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

        echo ""
        user "Enable tap-to-click? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
            defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
            defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
        fi

        echo ""
        user "Save to disk instead of iCloud by default? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
        fi

        echo ""
        user "Disable the sudden motion sensor (it's not useful for SSDs)? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            sudo pmset -a sms 0
        fi

        echo ""
        user "Show all filename extensions in Finder by default? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write NSGlobalDomain AppleShowAllExtensions -bool true
        fi

        echo ""
        user "Display full POSIX path as Finder window title? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
        fi

        echo ""
        user "Disable the warning when changing a file extension? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
        fi

        echo ""
        user "Use column view in all Finder windows by default? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write com.apple.finder FXPreferredViewStyle Clmv
        fi

        echo ""
        user "Avoid creation of .DS_Store files on network volumes? (y/n)"
        read -s -n 1 response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
            defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
        fi
    fi
}

